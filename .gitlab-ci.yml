# This is a GitLab CI/CD configuration file that builds and test docker image,
# which is then uploaded to GitLab Container Registry.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

docker-build:
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY/$CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - echo "Building docker image..."
    - docker build -t $IMAGE_TAG .
    - echo "Build complete."

trivy-test-job:
  stage: test
  image: docker:stable-git
  before_script:
    - export VERSION=$(curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
    - tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_TAG: $CI_REGISTRY/$CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - echo "Scanning docker image..."
    - ./trivy --exit-code 0 --severity HIGH --no-progress --auto-refresh $IMAGE_TAG
    - ./trivy --exit-code 1 --severity CRITICAL --no-progress --auto-refresh $IMAGE_TAG
    - echo "No lint issues found."
  cache:
    directories:
      - $HOME/.cache/trivy

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *all* jobs in the test stage complete successfully.
  variables:
    IMAGE_TAG: $CI_REGISTRY/$CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - echo "Deploying application..."
    - docker push $IMAGE_TAG
    - echo "Application successfully deployed."
